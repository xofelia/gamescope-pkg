.ONESHELL:
.SHELL = bash
.SHELLFLAGS = -ec

default: wayland libdrm wayland-protocols hwdata vkheaders libsdl2

include versions.mk

export WAYLAND_VERSION
export LIBDRM_VERSION
export WAYLAND_PROTOCOLS_VERSION
export WLROOTS_VERSION
export HWDATA_VERSION
export VULKAN_LOADER_VERSION
export LIBSDL2_VERSION

.PHONY: packages/wayland
packages/wayland: packages/wayland-$(WAYLAND_VERSION)
packages/wayland-$(WAYLAND_VERSION):
	set -ex

	rm -rf packages/wayland_tmp
	mkdir -p packages/wayland_tmp
	(
		cd packages/wayland_tmp
		# noble
		apt-get source -t noble --only-source wayland=$${WAYLAND_VERSION:?} --compile
	)
	mv -T packages/wayland_tmp packages/wayland-$${WAYLAND_VERSION:?}

.PHONY: packages/libdrm
packages/libdrm: packages/libdrm-$(LIBDRM_VERSION)
packages/libdrm-$(LIBDRM_VERSION):
	set -ex

	rm -rf packages/libdrm_tmp
	mkdir -p packages/libdrm_tmp
	(
		cd packages/libdrm_tmp
		# noble
		apt-get source -t noble --only-source libdrm=$${LIBDRM_VERSION:?} --compile
	)
	mv -T packages/libdrm_tmp packages/libdrm-$${LIBDRM_VERSION:?}

.PHONY: packages/wayland-protocols
packages/wayland-protocols: packages/wayland-protocols-$(WAYLAND_PROTOCOLS_VERSION)
packages/wayland-protocols-$(WAYLAND_PROTOCOLS_VERSION):
	set -ex

	rm -rf packages/wayland-protocols_tmp
	mkdir -p packages/wayland-protocols_tmp
	(
		cd packages/wayland-protocols_tmp
		# noble
		apt-get source -t noble --only-source wayland-protocols=$${WAYLAND_PROTOCOLS_VERSION:?} --compile
	)
	mv packages/wayland-protocols_tmp packages/wayland-protocols-$${WAYLAND_PROTOCOLS_VERSION:?}

.PHONY: packages/wlroots
packages/wlroots: packages/wlroots-$(WLROOTS_VERSION)
packages/wlroots-$(WLROOTS_VERSION):
	set -ex

	rm -rf packages/wlroots_tmp
	mkdir -p packages/wlroots_tmp
	(
		cd packages/wlroots_tmp
		# noble
		apt-get source -t noble --only-source wlroots=$${WLROOTS_VERSION:?} --compile
	)
	mv packages/wlroots_tmp packages/wlroots-$${WLROOTS_VERSION:?}

.PHONY: packages/hwdata
packages/hwdata: packages/hwdata-$(HWDATA_VERSION)
packages/hwdata-$(HWDATA_VERSION):
	set -ex

	rm -rf packages/hwdata_tmp
	mkdir -p packages/hwdata_tmp
	(
		cd packages/hwdata_tmp
		# noble
		apt-get source -t noble --only-source hwdata=$${HWDATA_VERSION:?} --compile
	)
	mv packages/hwdata_tmp packages/hwdata-$${HWDATA_VERSION:?}

.PHONY: packages/vkheaders
packages/vkheaders: packages/vkheaders-$(VULKAN_LOADER_VERSION)
packages/vkheaders-$(VULKAN_LOADER_VERSION):
	set -ex
	rm -rf packages/vkheaders_tmp
	mkdir -p packages/vkheaders_tmp
	(
		cd packages/vkheaders_tmp
		# noble
		apt-get source -t noble --only-source vulkan-loader=$${VULKAN_LOADER_VERSION:?} --compile
	)
	mv packages/vkheaders_tmp packages/vkheaders-$${VULKAN_LOADER_VERSION:?}

.PHONY: packages/libsdl2
packages/libsdl2: packages/libsdl2-$(LIBSDL2_VERSION)
packages/libsdl2-$(LIBSDL2_VERSION): packages/wayland-$(WAYLAND_VERSION) packages/libdrm-$(LIBDRM_VERSION) packages/wayland-protocols-$(WAYLAND_PROTOCOLS_VERSION)
	set -ex

	(
		cd packages/wayland-$${WAYLAND_VERSION:?}
		dpkg -i \
			libwayland-egl1_$${WAYLAND_VERSION}_amd64.deb \
			libwayland-client0_$${WAYLAND_VERSION}_amd64.deb \
			libwayland-cursor0_$${WAYLAND_VERSION}_amd64.deb \
			libwayland-dev_$${WAYLAND_VERSION}_amd64.deb \
			libwayland-server0_$${WAYLAND_VERSION}_amd64.deb \
			libwayland-bin_$${WAYLAND_VERSION}_amd64.deb
	)

	(
		cd packages/libdrm-$${LIBDRM_VERSION:?}
		dpkg -i \
			libdrm2_$${LIBDRM_VERSION}_amd64.deb \
			libdrm-amdgpu1_$${LIBDRM_VERSION}_amd64.deb \
			libdrm-common_$${LIBDRM_VERSION}_all.deb \
			libdrm-intel1_$${LIBDRM_VERSION}_amd64.deb \
			libdrm-nouveau2_$${LIBDRM_VERSION}_amd64.deb \
			libdrm-radeon1_$${LIBDRM_VERSION}_amd64.deb \
			libdrm-dev_$${LIBDRM_VERSION}_amd64.deb
	)

	(
		cd packages/wayland-protocols-$${WAYLAND_PROTOCOLS_VERSION:?}
		dpkg -i \
			wayland-protocols_$${WAYLAND_PROTOCOLS_VERSION}_all.deb
	)

	rm -rf packages/libsdl2_tmp
	mkdir -p packages/libsdl2_tmp
	(
		cd packages/libsdl2_tmp
		apt-get source -t noble --only-source libsdl2=$${LIBSDL2_VERSION:?} --compile
	)
	mv packages/libsdl2_tmp packages/libsdl2-$${LIBSDL2_VERSION:?}

BUILD=./build
.PHONY: $(BUILD)
$(BUILD):
	set -e

	rm -rf $(BUILD)
	mkdir -p $(BUILD)

	mkdir -p $(BUILD)/include
	mkdir -p $(BUILD)/lib/x86_64-linux-gnu
	mkdir -p $(BUILD)/lib/x86_64-linux-gnu/pkgconfig

	mkdir -p $(BUILD)/share
	mkdir -p $(BUILD)/share/pkgconfig

.PHONY: wayland
wayland: FROM=packages/wayland-$${WAYLAND_VERSION:?}/wayland-*/debian
wayland: packages/wayland-$(WAYLAND_VERSION) $(BUILD)
	set -e

	cp -rP $(FROM)/libwayland-server0/usr/. $(BUILD)/.
	cp -rP $(FROM)/libwayland-dev/usr/. $(BUILD)/.
	cp -rP $(FROM)/libwayland-bin/usr/. $(BUILD)/.
	cp -rP $(FROM)/libwayland-client0/usr/. $(BUILD)/.
	cp -rP $(FROM)/libwayland-egl1/usr/. $(BUILD)/.
	cp -rP $(FROM)/libwayland-cursor0/usr/. $(BUILD)/.

.PHONY: libdrm
libdrm: FROM=packages/libdrm-$${LIBDRM_VERSION:?}/libdrm-*/debian
libdrm: packages/libdrm-$(LIBDRM_VERSION) $(BUILD)
	set -e

	mkdir -p $(BUILD)/share/libdrm

	cp -rP $(FROM)/libdrm-common/usr/. $(BUILD)/.
	cp -rP $(FROM)/libdrm2/usr/. $(BUILD)/.
	cp -rP $(FROM)/libdrm-radeon1/usr/. $(BUILD)/.
	cp -rP $(FROM)/libdrm-intel1/usr/. $(BUILD)/.
	cp -rP $(FROM)/libdrm-amdgpu1/usr/. $(BUILD)/.

	cp -rP $(FROM)/libdrm-dev/usr/. $(BUILD)/.

.PHONY: wayland-protocols
wayland-protocols: FROM=packages/wayland-protocols-$${WAYLAND_PROTOCOLS_VERSION:?}/wayland-protocols-*/debian
wayland-protocols: packages/wayland-protocols-$(WAYLAND_PROTOCOLS_VERSION) $(BUILD)
	set -e

	cp -rP $(FROM)/wayland-protocols/usr/. $(BUILD)/.

.PHONY: hwdata
hwdata: FROM=packages/hwdata-$${HWDATA_VERSION:?}/hwdata-*/debian
hwdata: packages/hwdata-$(HWDATA_VERSION) $(BUILD)
	set -e

	cp -rP $(FROM)/hwdata/usr/. $(BUILD)/.

.PHONY: vkheaders
vkheaders: FROM=packages/vkheaders-$${VULKAN_LOADER_VERSION:?}/vulkan-loader-*/debian
vkheaders: packages/vkheaders-$(VULKAN_LOADER_VERSION) $(BUILD)
	set -e

	cp -rP $(FROM)/libvulkan1/usr/. $(BUILD)/.

	cp -rP $(FROM)/libvulkan-dev/usr/. $(BUILD)/.

	#hack, workaround what something i'm 99% sure is a libvulkan [packaging?] bug
	sed -i -e 's|libdir=.*|libdir=$${exec_prefix}/lib/x86_64-linux-gnu|' \
		$(BUILD)/lib/x86_64-linux-gnu/pkgconfig/vulkan.pc

.PHONY: libsdl2
libsdl2: FROM=packages/libsdl2-$${LIBSDL2_VERSION:?}/libsdl2-*/debian
libsdl2: packages/libsdl2-$(LIBSDL2_VERSION) $(BUILD)
	set -e

	cp -rP $(FROM)/libsdl2-2.0-0/usr/. $(BUILD)/.

	cp -rP $(FROM)/libsdl2-dev/usr/. $(BUILD)/.

	#hack, pretty sure this is jarrad not understanding sdl2 build process though
	sed -i -e 's|-I\$${includedir}/SDL2|-I\$${includedir}/SDL2 -I\$${includedir}/x86_64-linux-gnu|' \
		$(BUILD)/lib/x86_64-linux-gnu/pkgconfig/sdl2.pc
